version: "3.9"

services:
  mysqlgdc:
    image: mysql
    container_name: mysqlgdc
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports: 
      - "3310:3306"
    environment:
      MYSQL_DATABASE: gdosconstruccionesdb
      MYSQL_ROOT: root
      MYSQL_USER: user.admin
      MYSQL_PASSWORD: user.admin.gdc.db
      MYSQL_ROOT_PASSWORD: user.admin.gdc.db
    volumes:
      - ./dump:/docker-entrypoint-initdb.d
      - ./conf:/etc/mysql/conf.d
      - .persistent:/var/lib/mysql:rw

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysqlgdc
      MYSQL_USER: user.admin
      MYSQL_PASSWORD: user.admin.gdc.db
      MYSQL_ROOT_PASSWORD: user.admin.gdc.db
    links:
      - mysqlgdc

  nodejsapp:
    container_name: nodejsapp
    restart: always
    build: ./backend
    ports: 
      - "5001:5001"
    depends_on:
      mysqlgdc:
        condition: service_started
    volumes:
      - ./backend:/usr/src/app/backend
      - /usr/src/app/node_modules
    links: 
      - mysqlgdc

  reactjsapp:
    container_name: reactjsapp
    stdin_open: true
    tty: true
    restart: always
    build: ./frontend
    ports: 
      - "5000:3000"
    volumes: 
      - ./frontend:/usr/src/app/frontend
    links:
      - nodejsapp

  reactjscuerre:
    container_name: reactjscuerre
    stdin_open: true
    tty: true
    restart: always
    build: ./cuerre
    ports: 
      - "5002:3002"
    volumes: 
      - ./cuerre:/usr/src/app/cuerre
    links:
      - nodejsapp

  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - "8080:80"
    links:
      - reactjscuerre
      - nodejsapp
      - reactjsapp
      - nginx-proxy
      - letsencrypt
    environment:
      - VIRTUAL_HOST=gestion.gdosconstrucciones.com.ar, cuerre.gdosconstrucciones.com.ar
      - LETSENCRYPT_HOST=gestion.gdosconstrucciones.com.ar, cuerre.gdosconstrucciones.com.ar
    restart: always
    volumes:
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro

  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
        - /var/run/docker.sock:/tmp/docker.sock:ro
        - certs:/etc/nginx/certs:ro
        - vhostd:/etc/nginx/vhost.d
        - html:/usr/share/nginx/html
    labels:
        - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt:
      image: jrcs/letsencrypt-nginx-proxy-companion
      restart: always
      environment:
          - NGINX_PROXY_CONTAINER=nginx-proxy
      volumes:
        - certs:/etc/nginx/certs:rw
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - vhostd:/etc/nginx/vhost.d
        - html:/usr/share/nginx/html

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  certs:
  html:
  vhostd: