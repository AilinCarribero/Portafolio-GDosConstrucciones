version: "3.9"

services:
  #mysqlgdcport:
  #   image: mysql
  #   container_name: mysqlgdcport
  #   command: --default-authentication-plugin=mysql_native_password
  #   restart: always
  #   ports:
  #     - "3310:3306"
  #   environment:
  #     MYSQL_DATABASE: gdcdb
  #     MYSQL_ROOT: root
  #     MYSQL_USER: user.root
  #     MYSQL_PASSWORD: user.gdc.db
  #     MYSQL_ROOT_PASSWORD: user.gdc.db
  #   volumes:
  #     - ./dump:/docker-entrypoint-initdb.d
  #     - ./conf:/etc/mysql/conf.d
  #     - .persistent:/var/lib/mysql:rw

  #phpmyadmin:
  #  image: phpmyadmin/phpmyadmin
  #  container_name: phpmyadmin
  #  ports:
  #    - "8081:80"
  #  environment:
  #    PMA_HOST: mysqlgdcport
  #    MYSQL_USER: user.root
  #    MYSQL_PASSWORD: user.gdc.db
  #    MYSQL_ROOT_PASSWORD: user.gdc.db
  #  links:
  #    - mysqlgdcport

  nodejsapp:
    container_name: nodejsapp
    restart: always
    build: ./backend
    ports:
      - "5000:5000"
    #depends_on:
    #  mysqlgdcport:
    #    condition: service_started
    volumes:
      - ./backend:/usr/src/app/backend
      - /usr/src/app/node_modules
    #links:
    # - mysqlgdcport

  reactjsapp:
    container_name: reactjsapp
    stdin_open: true
    tty: true
    restart: always
    build: ./frontend
    ports:
      - "5001:3000"
    volumes:
      - ./frontend:/usr/src/app/frontend
    links:
      - nodejsapp

  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - "8080:80"
    depends_on:
      reactjsapp:
        condition: service_started
    links:
      - nodejsapp
      - reactjsapp
      - nginx-proxy
      - letsencrypt
    environment:
      - DOCKER_USERNAME=ailin97
      - DOCKER_PASSWORD=dckr_pat_mLcHEiMN0yi3Goz7rlYYZhjqMpI
      - VIRTUAL_HOST=portafoliogdc.carribero.com.ar
      - LETSENCRYPT_HOST=portafoliogdc.carribero.com.ar
    restart: always
    

  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html

volumes:
  certs:
  html:
  vhostd:
